plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
description = 'batch'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-batch')
	implementation('org.springframework.boot:spring-boot-starter-actuator')

	implementation("org.postgresql:postgresql:42.7.7")
	implementation 'org.springframework.kafka:spring-kafka'

	compileOnly 'org.projectlombok:lombok:1.18.38'
	annotationProcessor 'org.projectlombok:lombok:1.18.38'

	implementation('io.prometheus:prometheus-metrics-core:1.3.8')

	implementation "net.logstash.logback:logstash-logback-encoder:8.1"

	implementation "io.micrometer:micrometer-tracing-bridge-otel"
	// Нужны если создавать свои span, а не использовать opentelemetry агента
	//implementation("io.opentelemetry:opentelemetry-api")
	//implementation("io.opentelemetry:opentelemetry-sdk")
	//implementation("io.opentelemetry:opentelemetry-exporter-otlp")

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jar {
	// Отключение сборки plain.jar
	enabled = false
}

tasks.named('test') {
	// Отключение тестов перед сборкой
	enabled = false

	useJUnitPlatform()
}
